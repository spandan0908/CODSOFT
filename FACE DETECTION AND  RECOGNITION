import cv2

# Load the Haar Cascade model for face detection
face_classifier = cv2.CascadeClassifier(cv2.data.haarcascades + "haarcascade_frontalface_default.xml")

# Load the video capture device (default camera)
video_capture = cv2.VideoCapture(0)

def detect_bounding_box(frame):
    # Convert the frame to grayscale
    gray_image = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    
    # Detect faces in the grayscale image
    faces = face_classifier.detectMultiScale(gray_image, 1.1, 5, minSize=(40, 40))
    
    # Draw a bounding box around each face
    for (x, y, w, h) in faces:
        cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 4)
    
    return frame

while True:
    # Read a frame from the video capture device
    result, video_frame = video_capture.read()
    
    if result is False:
        break
    
    # Apply the face detection function to the frame
    video_frame = detect_bounding_box(video_frame)
    
    # Display the processed frame
    cv2.imshow("My Face Detection Project", video_frame)
    
    # Exit on pressing 'q'
    if cv2.waitKey(1) & 0xFF == ord("q"):
        break

# Release the video capture device and close all OpenCV windows
video_capture.release()
cv2.destroyAllWindows()
